// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  username   String @unique
  password   String
  fname      String
  lname      String
  title      String
  country    String
  state      String
  city       String
  street     String
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  skill_set String[]
  my_experiences Experiences[]
  my_projects    Projects[]
  my_contacts    Contacts[]
  my_links       Links[]
  my_languages   Languages[]
  my_education   Education[]
}

model Experiences {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
  title   String
  company String
  step    String
  country String
  desc    String
  started DateTime
  ended   DateTime?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Projects {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  name       String
  tech       String[]
  date       DateTime
  details    String
  screenshot String
  rating     Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Contacts {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId  
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  type       String
  contact    String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Links {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId  
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  src        String
  href       String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Languages {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId  
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
  language      String
  fluency_level String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Education {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
  type          String
  institution   String
  subject       String
  country       String
  started_at    DateTime
  ended_at      DateTime?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}